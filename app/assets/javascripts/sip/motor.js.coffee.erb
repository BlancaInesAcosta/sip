# vim: set expandtab tabstop=2 shiftwidth=2 fileencoding=utf-8:
# 
# Por compartir entre motores que operen sobre sip

#//= require jquery
#//= require jquery_ujs
#//= require jquery-ui/widgets/autocomplete
#//= require bootstrap-datepicker
#//= require twitter/bootstrap
#//= require turbolinks
#//= require chosen-jquery
#//= require sip/geo

# AJAX

# Envía con ajax a la ruta especificada junto con los datos, espera
# respuesta html de la cual extrae una parte con selector selresp y
# lo usa para volver a pintar el elemento con selector selelem
@sip_envia_ajax_datos_ruta_y_pinta= (ruta, datos, selresp, selelem) ->
  root =  window
  t = Date.now()
  d = -1
  if (root.sip_envia_ajax_t)
    d = (t - root.sip_envia_ajax_t)/1000
  if (d == -1 || d > 2)
    sip_arregla_puntomontaje(root)
    rutac = root.puntomontaje + ruta + ".js"
    root.sip_envia_ajax_t = t
    $.ajax(url: rutac, data: datos, dataType: 'html').fail( (jqXHR, texto) ->
      alert("Error con ajax a " + rutac + ": " + texto)
    ).done( (e, r) ->
      t=$(e).find(selresp)[0]
      $(selelem).html(t)
      return
    )
  return

# AUTOCOMPLETACIÓN

# Para autocompletación busca regitros que coincidan con lo ingresado por 
#   usuario en el campo s
#
# @param s {object} es campo texto con foco donde se busca 
# @param sel_id {string} selector de campo donde quedará identificación 
# @param fuente {mixed} arreglo, url o función que busca y retorna
#  datos de la forma label: 'l1', value: 'v1' 
#
# @return {void}
@busca_gen= (s, sel_id, fuente) ->
  s.autocomplete({
    source: fuente,
    minLength: 2,
    select: ( event, ui ) -> 
      if (ui.item) 
        $(sel_id).val(ui.item.value) if sel_id != null
        s.val(ui.item.label)
        event.stopPropagation()
        event.preventDefault()
  })
  return

# PERSONA
# Elije una persona en autocompletación
@autocompleta_persona = (label, id, id_victima, divcp) ->
  cs = id.split(";")
  id_persona = cs[0]
  pl = []
  ini = 0
  for i in [0..cs.length] by 1
     t = parseInt(cs[i])
     pl[i] = label.substring(ini, ini + t)
     ini = ini + t + 1
  # pl[1] cnom, pl[2] es cape, pl[3] es cdoc
  d = "id_victima=" + id_victima
  d += "&id_persona=" + id_persona
  a = '/personas/remplazar'
  $.ajax(url: a, data: d, dataType: "html").fail( (jqXHR, texto) ->
    alert("Error con ajax " + texto)
  ).done( (e, r) ->
    divcp.html(e)
    return
  )
  return

# Busca persona por nombre, apellido o identificación
# s es objeto con foco donde se busca persona
@busca_persona_nombre = (s) ->
  cnom = s.attr('id')
  v = $("#" + cnom).data('autocompleta')
  if (v != 1 && v != "no") 
    $("#" + cnom).data('autocompleta', 1)
    divcp = s.closest('.campos_persona')
    if (typeof divcp == 'undefined' || divcp.length == 0)
      alert('No se ubico .campos_persona')
      return
    idvictima = divcp.parent().find('.caso_victima_id').find('input').val()
    if (typeof idvictima == 'undefined')
      alert('No se ubico .caso_victima_id')
      return
    $("#" + cnom).autocomplete({
      source: "/personas.json",
      minLength: 2,
      select: ( event, ui ) -> 
        if (ui.item) 
          autocompleta_persona(ui.item.value, ui.item.id, idvictima, divcp)
          event.stopPropagation()
          event.preventDefault()
    })
  return

# Añade endsWith a la clase String
# http://stackoverflow.com/questions/280634/endswith-in-javascript
if (typeof String.prototype.endsWith != 'function') 
  String.prototype.endsWith = (suffix) ->
    return this.indexOf(suffix, this.length - suffix.length) != -1

# Verifica que una fecha sea válida
# De: http://stackoverflow.com/questions/8098202/javascript-detecting-valid-dates
@fecha_valida = (text) ->
  date = Date.parse(text)
  if (isNaN(date))
      return false
  comp = text.split('-')
  if (comp.length != 3)
    return false;

  y = parseInt(comp[0], 10)
  m = parseInt(comp[1], 10)
  d = parseInt(comp[2], 10)
  date = new Date(y, m - 1, d);
  return (date.getFullYear() == y && 
    date.getMonth() + 1 == m && date.getDate() == d);

# Envia con AJAX datos del formulario, junto con el botón submit.
# @param root Raiz del documento, para guardar allí variable global.
# @param f    Formulario jquery-sado
@enviarautomatico_formulario = (root, f) ->
  a = f.attr('action')
  d = f.serialize()
  d += '&commit=Enviar'
  # En ocasiones lanza 2 veces seguidas el mismo evento. 
  # Evitamos enviar lo mismo.
  if (!root.dant || root.dant != d)
    root.dant = d 
    $.ajax(url: a, data: d, dataType: "script").fail( (jqXHR, texto) ->
      alert("Error con ajax " + texto)
    )
  return

# Pone / al final de root.puntomontaje (que debe corresponder al
# punto de montaje de la aplicación) o lo inicializa en / si no hay
#
# @param root espacio para poner variables globales
@sip_arregla_puntomontaje = (root) ->
  root.puntomontaje = '/' if typeof root.puntomontaje == 'undefined'
  root.puntomontaje += '/' if root.puntomontaje[root.puntomontaje.length-1] != '/'

# Prepara eventos comunes al usar sip
# @param root espacio para poner variables globales
@sip_prepara_eventos_comunes = (root, sincoord = false) ->
  # Arreglar punto de montaje de la aplicacion
  root.puntomontaje = "<%= ENV['RAILS_RELATIVE_URL_ROOT'] ? ENV['RAILS_RELATIVE_URL_ROOT'] : Rails.configuration.relative_url_root %>"
  sip_arregla_puntomontaje(root)
  # Formularios con departamento/municipio sin llenar autom. coordenadas
  root.sip_sincoord = false;

  #<% puts  "formato_fecha: ", Rails.configuration.x.formato_fecha %>
  #<% puts  "relative_url_root: ", Rails.configuration.relative_url_root %>
  # Formato de campos de fecha con datepicker
  root.formato_fecha = '<%= Rails.configuration.x.formato_fecha && Rails.configuration.x.formato_fecha.to_s != "{}"  ? Rails.configuration.x.formato_fecha.to_s : "yyyy-mm-dd" %>'

  $('[data-behaviour~=datepicker]').datepicker({
    format: root.formato_fecha,
    autoclose: true,
    todayHighlight: true,
    language: 'es'	
  })

  $('[data-toggle="tooltip"]').tooltip()
  $(document).on('cocoon:after-insert', (e) ->
    $('[data-behaviour~=datepicker]').datepicker({
      format: root.formato_fecha
      autoclose: true
      todayHighlight: true
      language: 'es'
    })
    $('[data-toggle="tooltip"]').tooltip()
  )

  # Chosen-jquery 
  $('.chosen-select').chosen
    allow_single_deselect: true
    no_results_text: 'No hay resultados',
    placeholder_text_single: 'Seleccióne una opción',
    placeholder_text_multiple: 'Selecciones algunas opciones',
    width: '100%'

  jQuery ->
    $("a[rel~=popover], .has-popover").popover()
    $("a[rel~=tooltip], .has-tooltip").tooltip()

  # Al cambiar país se recalcula lista de departamentos
  $(document).on('change', 'select[id$=_id_pais]', (e) ->
    llena_departamento($(this), root, sincoord)
  )
  $(document).on('change', 'select[id$=_pais_id]', (e) ->
    llena_departamento($(this), root, sincoord)
  )

  # Al cambiar departamento se recalcula lista de municipios
  $(document).on('change', 'select[id$=_id_departamento]', (e) ->
    llena_municipio($(this), root, sincoord)
  )
  $(document).on('change', 'select[id$=_departamento_id]', (e) ->
    llena_municipio($(this), root, sincoord)
  )

  # Al cambiar municipio se recalcula lista de centros poblados
  $(document).on('change', 'select[id$=_id_municipio]', (e) ->
    llena_clase($(this), root, sincoord)
  )
  $(document).on('change', 'select[id$=_municipio_id]', (e) ->
    llena_clase($(this), root, sincoord)
  )

  # Al cambiar centro poblado se deja tipo de ubicación en Urbano
  $(document).on('change', 'select[id$=_id_clase]', (e) ->
    pone_tipourbano($(this))
  )
  $(document).on('change', 'select[id$=_clase_id]', (e) ->
    pone_tipourbano($(this))
  )


  $('#mundep').on('focusin', (e) ->
    sip_arregla_puntomontaje(root)
    busca_gen($(this), null, root.puntomontaje + "/mundep.json")
  )

  $(document).on('change', 'select[data-enviarautomatico]', 
    (e) -> 
      enviarautomatico_formulario(root, $(e.target.form))
  )
  $(document).on('change', 'input[data-enviarautomatico]', 
    (e) -> 
      #debugger
      # No procesa selección de fecha, pero si cuando se teclea
      #if typeof $(e.target).attr('data-behaviour') == 'undefined' || e.bubbles
      enviarautomatico_formulario(root, $(e.target.form))
  )

  # Rotador: http://blog.emaillenin.com/2014/06/showing-a-spinnerloading-cursor-icon-for-rails-4-turbolink.html
  iniciaRotador = ->
    $("html").css "cursor", "progress"
    return

  detieneRotador = ->
    $("html").css "cursor", "auto"
    return

  $(document).on('turbolinks:click', (event) ->
    if event.target.getAttribute('href').charAt(0) == '#'
      return event.preventDefault()
  )

  $(document).on "page:fetch", iniciaRotador

  $(document).on "page:receive", detieneRotador

  return


